doxygen
{
    xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance
    xsi:noNamespaceSchemaLocation=compound.xsd
    version=1.8.11
    compounddef
    {
        id=enclave_8h
        kind=file
        language=C++
        compoundname
        {
            chars="enclave.h"
        }
        includes
        {
            local=yes
            chars="defs.h"
        }
        includes
        {
            local=yes
            chars="types.h"
        }
        includes
        {
            local=yes
            chars="/root/openenclave/include/openenclave/defs.h"
        }
        includes
        {
            local=yes
            chars="result.h"
        }
        includes
        {
            local=yes
            chars="thread.h"
        }
        includes
        {
            local=yes
            chars="/root/openenclave/include/openenclave/types.h"
        }
        includes
        {
            local=yes
            chars="typeinfo.h"
        }
        includes
        {
            local=yes
            chars="/root/openenclave/include/openenclave/result.h"
        }
        includes
        {
            local=yes
            chars="atomic.h"
        }
        includes
        {
            local=yes
            chars="sha.h"
        }
        incdepgraph
        {
            node
            {
                id=11
                label
                {
                    chars="sha.h"
                }
            }
            node
            {
                id=7
                label
                {
                    chars="/root/openenclave/include/openenclave/types.h"
                }
            }
            node
            {
                id=8
                label
                {
                    chars="typeinfo.h"
                }
            }
            node
            {
                id=5
                label
                {
                    chars="result.h"
                }
            }
            node
            {
                id=4
                label
                {
                    chars="/root/openenclave/include/openenclave/defs.h"
                }
            }
            node
            {
                id=2
                label
                {
                    chars="defs.h"
                }
            }
            node
            {
                id=10
                label
                {
                    chars="atomic.h"
                }
            }
            node
            {
                id=9
                label
                {
                    chars="/root/openenclave/include/openenclave/result.h"
                }
            }
            node
            {
                id=3
                label
                {
                    chars="types.h"
                }
            }
            node
            {
                id=1
                label
                {
                    chars="/root/openenclave/include/openenclave/enclave.h"
                }
                link
                {
                    refid=enclave.h
                }
                childnode
                {
                    refid=2
                    relation=include
                }
                childnode
                {
                    refid=3
                    relation=include
                }
                childnode
                {
                    refid=4
                    relation=include
                }
                childnode
                {
                    refid=5
                    relation=include
                }
                childnode
                {
                    refid=6
                    relation=include
                }
                childnode
                {
                    refid=7
                    relation=include
                }
                childnode
                {
                    refid=8
                    relation=include
                }
                childnode
                {
                    refid=9
                    relation=include
                }
                childnode
                {
                    refid=10
                    relation=include
                }
                childnode
                {
                    refid=11
                    relation=include
                }
            }
            node
            {
                id=6
                label
                {
                    chars="thread.h"
                }
            }
        }
        innerclass
        {
            refid=struct__OE__EnclaveReportData
            prot=public
            chars="_OE_EnclaveReportData"
        }
        sectiondef
        {
            kind=define
            memberdef
            {
                kind=define
                id=enclave_8h_1a446fd9dde5f0bb30b684c01ef7ed1dbf
                prot=public
                static=no
                name
                {
                    chars="OE_BUILD_ENCLAVE"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=16
                    column=10
                    bodyfile=/root/openenclave/include/openenclave/enclave.h
                    bodystart=16
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=enclave_8h_1ac2b4b92e05eda49d7e9efd402a280119
                prot=public
                static=no
                name
                {
                    chars="OE_ECALL_SECTION"
                }
                initializer
                {
                    chars="__attribute__((section (".ecall")))"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=19
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/enclave.h
                    bodystart=19
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=enclave_8h_1a17442f9c583fe8a12b684c9e4146b9e5
                prot=public
                static=no
                name
                {
                    chars="OE_ECALL"
                }
                initializer
                {
                    chars="OE_EXPORT OE_ECALL_SECTION"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=24
                    column=11
                    bodyfile=/root/openenclave/include/openenclave/enclave.h
                    bodystart=24
                    bodyend=-1
                }
            }
            memberdef
            {
                kind=define
                id=enclave_8h_a1df224cdefe0cfb6726a3c55dbf51ef9_1a1df224cdefe0cfb6726a3c55dbf51ef9
                prot=public
                static=no
                name
                {
                    chars="OE_Assert"
                }
                param
                {
                    defname
                    {
                        chars="EXPR"
                    }
                }
                initializer
                {
                    chars="do \\n    { \\n        if (!(EXPR)) \\n            __OE_AssertFail(#EXPR, __FILE__, __LINE__, __FUNCTION__); \\n    } \\n    while (0)"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=292
                    column=9
                    bodyfile=/root/openenclave/include/openenclave/enclave.h
                    bodystart=292
                    bodyend=-1
                }
            }
        }
        sectiondef
        {
            kind=typedef
            memberdef
            {
                kind=typedef
                id=enclave_8h_1adb8c56adcb8cd4d1490108f2b0c588f1
                prot=public
                static=no
                type
                {
                    ref
                    {
                        refid=struct__OE__EnclaveReportData
                        kindref=compound
                        chars="_OE_EnclaveReportData"
                    }
                    chars="struct"
                }
                definition
                {
                    chars="typedef struct _OE_EnclaveReportData\n OE_EnclaveReportData"
                }
                argsstring
                {
                }
                name
                {
                    chars="OE_EnclaveReportData"
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=106
                    column=1
                }
            }
        }
        sectiondef
        {
            kind=func
            memberdef
            {
                kind=function
                id=enclave_8h_a3f4d990cf1e916d65a82481a55aafbf4_1a3f4d990cf1e916d65a82481a55aafbf4
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="OE_Result"
                }
                definition
                {
                    chars="OE_Result OE_CallHost"
                }
                argsstring
                {
                    chars="(const char *func, void *args)"
                }
                name
                {
                    chars="OE_CallHost"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="func"
                    }
                }
                param
                {
                    type
                    {
                        chars="void *"
                    }
                    declname
                    {
                        chars="args"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Perform an outside function call (or OCALL) into the host."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="func"
                        }
                        bold
                        {
                            chars="args"
                        }
                        verbatim
                        {
                            chars="OE_OCALL void (*)(void* args);"
                        }
                        chars="Call the host function named , passing it the  parameter. The host must provide a function with the following signature."
                    }
                    para
                    {
                        bold
                        {
                            chars="args"
                        }
                        chars="The meaning of the  parameter is defined by the OCALL implementation and might be null for some implementations."
                    }
                    para
                    {
                        bold
                        {
                            chars="OCALL"
                        }
                        bold
                        {
                            chars="ORET"
                        }
                        chars="At the software layer, this function sends an  message to the host and waits for an  message. Note that the OCALL implementation may call back into the enclave (an ECALL) before returning."
                    }
                    para
                    {
                        bold
                        {
                            chars="ENCLU.EEXIT"
                        }
                        bold
                        {
                            chars="ENCLU.EENTER"
                        }
                        chars="At the hardware layer, this function executes the  instruction to leave the enclave and enter the host. When the host returns from the OCALL, it executes the  instruction to reenter the enclave."
                    }
                    para
                    {
                        bold
                        {
                            chars="args"
                        }
                        chars="Note that the return value only indicates whether the OCALL was called and not whether it was successful. The OCALL implementation must define its own error reporting scheme based on the  parameter."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="func"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The name of the host function that will be called."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="args"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The arguments to be passed to the host function."
                                    }
                                }
                            }
                        }
                        parameterlist
                        {
                            kind=retval
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="OE_OK"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The function was successful."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="OE_FAILED"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The function failed."
                                    }
                                }
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=57
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1ac769736113e86c390c4968460d1c3e90
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="OE_Result"
                }
                definition
                {
                    chars="OE_Result __OE_OCall"
                }
                argsstring
                {
                    chars="(int func, uint64_t argIn, uint64_t *argOut)"
                }
                name
                {
                    chars="__OE_OCall"
                }
                param
                {
                    type
                    {
                        chars="int"
                    }
                    declname
                    {
                        chars="func"
                    }
                }
                param
                {
                    type
                    {
                        chars="uint64_t"
                    }
                    declname
                    {
                        chars="argIn"
                    }
                }
                param
                {
                    type
                    {
                        chars="uint64_t *"
                    }
                    declname
                    {
                        chars="argOut"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=61
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_a02ef8b20b64a998bb97dfbdddb0c6ba5_1a02ef8b20b64a998bb97dfbdddb0c6ba5
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="bool"
                }
                definition
                {
                    chars="bool OE_IsWithinEnclave"
                }
                argsstring
                {
                    chars="(const void *ptr, size_t size)"
                }
                name
                {
                    chars="OE_IsWithinEnclave"
                }
                param
                {
                    type
                    {
                        chars="const void *"
                    }
                    declname
                    {
                        chars="ptr"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Check whether the given buffer is strictly within the enclave."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="ptr"
                        }
                        bold
                        {
                            chars="size"
                        }
                        chars="Check whether the buffer given by the  and  parameters is strictly within the enclave's memory. If so, return true. If any portion of the buffer lies outside the enclave's memory, return false."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="ptr"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The pointer pointer to buffer."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="size"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The size of buffer"
                                    }
                                }
                            }
                        }
                        parameterlist
                        {
                            kind=retval
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="true"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The buffer is strictly within the enclave."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="false"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="At least some part of the buffer is outside the enclave."
                                    }
                                }
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=80
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_a33b395779e9fe73102bfe728261917a6_1a33b395779e9fe73102bfe728261917a6
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="bool"
                }
                definition
                {
                    chars="bool OE_IsOutsideEnclave"
                }
                argsstring
                {
                    chars="(const void *ptr, size_t size)"
                }
                name
                {
                    chars="OE_IsOutsideEnclave"
                }
                param
                {
                    type
                    {
                        chars="const void *"
                    }
                    declname
                    {
                        chars="ptr"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Check whether the given buffer is strictly outside the enclave."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="ptr"
                        }
                        bold
                        {
                            chars="size"
                        }
                        chars="Check whether the buffer given by the  and  parameters is strictly outside the enclave's memory. If so, return true. If any portion of the buffer lies within the enclave's memory, return false."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="ptr"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The pointer to buffer."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="size"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The size of buffer."
                                    }
                                }
                            }
                        }
                        parameterlist
                        {
                            kind=retval
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="true"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The buffer is strictly outside the enclave."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="false"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="At least some part of the buffer is within the enclave."
                                    }
                                }
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=98
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a9c7debe616d0e0e006951a35e86af70f
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="OE_Result"
                }
                definition
                {
                    chars="OE_Result OE_GetReportForRemoteAttestation"
                }
                argsstring
                {
                    chars="(const OE_EnclaveReportData *reportData, void *report, size_t *reportSize)"
                }
                name
                {
                    chars="OE_GetReportForRemoteAttestation"
                }
                param
                {
                    type
                    {
                        ref
                        {
                            refid=struct__OE__EnclaveReportData
                            kindref=compound
                            chars="OE_EnclaveReportData"
                        }
                        chars="const  *"
                    }
                    declname
                    {
                        chars="reportData"
                    }
                }
                param
                {
                    type
                    {
                        chars="void *"
                    }
                    declname
                    {
                        chars="report"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t *"
                    }
                    declname
                    {
                        chars="reportSize"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=108
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1ae7e965bfd292e51ab5fd220f78a19135
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void"
                }
                definition
                {
                    chars="void __OE_HandleMain"
                }
                argsstring
                {
                    chars="(uint64_t arg1, uint64_t arg2, uint64_t cssa, void *tcs)"
                }
                name
                {
                    chars="__OE_HandleMain"
                }
                param
                {
                    type
                    {
                        chars="uint64_t"
                    }
                    declname
                    {
                        chars="arg1"
                    }
                }
                param
                {
                    type
                    {
                        chars="uint64_t"
                    }
                    declname
                    {
                        chars="arg2"
                    }
                }
                param
                {
                    type
                    {
                        chars="uint64_t"
                    }
                    declname
                    {
                        chars="cssa"
                    }
                }
                param
                {
                    type
                    {
                        chars="void *"
                    }
                    declname
                    {
                        chars="tcs"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=113
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a501a4416e8e702f358c2c9a2f2db0085
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="size_t"
                }
                definition
                {
                    chars="size_t OE_Strlen"
                }
                argsstring
                {
                    chars="(const char *s)"
                }
                name
                {
                    chars="OE_Strlen"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="s"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=127
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1aadd1c980d0964072b06c924a6571589a
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_Strcmp"
                }
                argsstring
                {
                    chars="(const char *s1, const char *s2)"
                }
                name
                {
                    chars="OE_Strcmp"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="s1"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="s2"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=129
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a6a6de71dcece7c98bd97e0a1d16787a8
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="size_t"
                }
                definition
                {
                    chars="size_t OE_Strlcpy"
                }
                argsstring
                {
                    chars="(char *dest, const char *src, size_t size)"
                }
                name
                {
                    chars="OE_Strlcpy"
                }
                param
                {
                    type
                    {
                        chars="char *"
                    }
                    declname
                    {
                        chars="dest"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="src"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=131
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a110fd4262b8ef3f490167ea4fc90835b
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="size_t"
                }
                definition
                {
                    chars="size_t OE_Strlcat"
                }
                argsstring
                {
                    chars="(char *dest, const char *src, size_t size)"
                }
                name
                {
                    chars="OE_Strlcat"
                }
                param
                {
                    type
                    {
                        chars="char *"
                    }
                    declname
                    {
                        chars="dest"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="src"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=133
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a9a5f74272bec8ad2a6ed9f72262d79c7
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void *"
                }
                definition
                {
                    chars="void* OE_Memcpy"
                }
                argsstring
                {
                    chars="(void *dest, const void *src, size_t n)"
                }
                name
                {
                    chars="OE_Memcpy"
                }
                param
                {
                    type
                    {
                        chars="void *"
                    }
                    declname
                    {
                        chars="dest"
                    }
                }
                param
                {
                    type
                    {
                        chars="const void *"
                    }
                    declname
                    {
                        chars="src"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="n"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=135
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1ae24bfe0db16cb4f14dadf5c0e8e1642d
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void *"
                }
                definition
                {
                    chars="void* OE_Memset"
                }
                argsstring
                {
                    chars="(void *s, int c, size_t n)"
                }
                name
                {
                    chars="OE_Memset"
                }
                param
                {
                    type
                    {
                        chars="void *"
                    }
                    declname
                    {
                        chars="s"
                    }
                }
                param
                {
                    type
                    {
                        chars="int"
                    }
                    declname
                    {
                        chars="c"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="n"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=137
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a28c68a9d56437166de29345a2ad2346c
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_Memcmp"
                }
                argsstring
                {
                    chars="(const void *s1, const void *s2, size_t n)"
                }
                name
                {
                    chars="OE_Memcmp"
                }
                param
                {
                    type
                    {
                        chars="const void *"
                    }
                    declname
                    {
                        chars="s1"
                    }
                }
                param
                {
                    type
                    {
                        chars="const void *"
                    }
                    declname
                    {
                        chars="s2"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="n"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=139
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a8e55d0688551186025aae154d22249b5
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void"
                }
                definition
                {
                    chars="void OE_Abort"
                }
                argsstring
                {
                    chars="(void)"
                }
                name
                {
                    chars="OE_Abort"
                }
                param
                {
                    type
                    {
                        chars="void"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=149
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_a6b091c1631b6fcd1826c4e7eaac12f0a_1a6b091c1631b6fcd1826c4e7eaac12f0a
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_Vsnprintf"
                }
                argsstring
                {
                    chars="(char *str, size_t size, const char *fmt, OE_va_list ap)"
                }
                name
                {
                    chars="OE_Vsnprintf"
                }
                param
                {
                    type
                    {
                        chars="char *"
                    }
                    declname
                    {
                        chars="str"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="fmt"
                    }
                }
                param
                {
                    type
                    {
                        chars="OE_va_list"
                    }
                    declname
                    {
                        chars="ap"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Produce output according to a given format string."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        itemizedlist
                        {
                            listitem
                            {
                                para
                                {
                                    chars=""%s""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%u""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%d""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%x""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%lu""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%ld""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%lx""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%zu""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%zd""
                                }
                            }
                            listitem
                            {
                                para
                                {
                                    chars=""%p""
                                }
                            }
                        }
                        chars="This function is similar to vsnprintf() but has limited support for format types. It only supports the following without width specifiers."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="str"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Write output to this string"
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="size"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        bold
                                        {
                                            chars="str"
                                        }
                                        chars="The size of  parameter."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="fmt"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The limited printf style format."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                bold
                                {
                                    chars="size"
                                }
                                chars="The number of characters that would be written excluding the zero-terminator. If this value is greater or equal to , then the string was truncated."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=176
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_a278cf78b75ffd7901c00248ae2a655c7_1a278cf78b75ffd7901c00248ae2a655c7
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_Snprintf"
                }
                argsstring
                {
                    chars="(char *str, size_t size, const char *fmt,...)"
                }
                name
                {
                    chars="OE_Snprintf"
                }
                param
                {
                    type
                    {
                        chars="char *"
                    }
                    declname
                    {
                        chars="str"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="fmt"
                    }
                }
                param
                {
                    type
                    {
                        chars="..."
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Produce output according to a given format string."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=enclave_8h_a6b091c1631b6fcd1826c4e7eaac12f0a_1a6b091c1631b6fcd1826c4e7eaac12f0a
                            kindref=member
                            chars="OE_Vsnprintf()"
                        }
                        chars="This function is similar to snprintf() but has limited support for format types. See  for details on these limits."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="str"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="Write output to this string."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="size"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        bold
                                        {
                                            chars="str"
                                        }
                                        chars="The size of  parameter."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="fmt"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The limited printf style format."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                bold
                                {
                                    chars="size"
                                }
                                chars="The number of characters that would be written excluding the zero-terminator. If this value is greater or equal to , then the string was truncated."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=194
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a72650c7a544230039eab0f37b5394281
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_HostPuts"
                }
                argsstring
                {
                    chars="(const char *str)"
                }
                name
                {
                    chars="OE_HostPuts"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="str"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=204
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a731c0cf4247c2fe34cbb9fdb9a64442c
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_HostPrint"
                }
                argsstring
                {
                    chars="(const char *str)"
                }
                name
                {
                    chars="OE_HostPrint"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="str"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=206
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1ae387edea2f792a34040a89f093cf7360
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_HostVprintf"
                }
                argsstring
                {
                    chars="(const char *fmt, OE_va_list ap_)"
                }
                name
                {
                    chars="OE_HostVprintf"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="fmt"
                    }
                }
                param
                {
                    type
                    {
                        chars="OE_va_list"
                    }
                    declname
                    {
                        chars="ap_"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=208
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_a3593f7245e4dfc759435d3815eeccf51_1a3593f7245e4dfc759435d3815eeccf51
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_HostPrintf"
                }
                argsstring
                {
                    chars="(const char *fmt,...)"
                }
                name
                {
                    chars="OE_HostPrintf"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="fmt"
                    }
                }
                param
                {
                    type
                    {
                        chars="..."
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Print formatted characters to the host's console."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        ref
                        {
                            refid=enclave_8h_a6b091c1631b6fcd1826c4e7eaac12f0a_1a6b091c1631b6fcd1826c4e7eaac12f0a
                            kindref=member
                            chars="OE_Vsnprintf()"
                        }
                        chars="This function writes formatted characters to the host console. Is is based on , which has limited support for format types."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="fmt"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The limited printf style format."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="The number of characters that were written."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=222
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a4a26952d5df57c38865a4f5e2d1d10cb
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="int"
                }
                definition
                {
                    chars="int OE_HostPutchar"
                }
                argsstring
                {
                    chars="(int c)"
                }
                name
                {
                    chars="OE_HostPutchar"
                }
                param
                {
                    type
                    {
                        chars="int"
                    }
                    declname
                    {
                        chars="c"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=224
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_a1c0f1e4f4f25df87c37777a5ef9fa8c7_1a1c0f1e4f4f25df87c37777a5ef9fa8c7
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="OE_ALWAYS_INLINE OE_INLINE void *"
                }
                definition
                {
                    chars="OE_ALWAYS_INLINE OE_INLINE void* OE_StackAlloc"
                }
                argsstring
                {
                    chars="(size_t size, size_t alignment)"
                }
                name
                {
                    chars="OE_StackAlloc"
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="alignment"
                    }
                }
                briefdescription
                {
                    para
                    {
                        chars="Allocates space on the stack frame of the caller."
                    }
                }
                detaileddescription
                {
                    para
                    {
                        bold
                        {
                            chars="size"
                        }
                        bold
                        {
                            chars="alignment"
                        }
                        chars="This function allocates  bytes of space on the stack frame of the caller. The returned address will be a multiple of  (if non-zero). The allocated space is automatically freed when the calling function returns. If the stack overflows, the behavior is undefined."
                    }
                    para
                    {
                        parameterlist
                        {
                            kind=param
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="size"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The number of bytes to allocate."
                                    }
                                }
                            }
                            parameteritem
                            {
                                parameternamelist
                                {
                                    parametername
                                    {
                                        chars="alignment"
                                    }
                                }
                                parameterdescription
                                {
                                    para
                                    {
                                        chars="The alignment requirement (see above)."
                                    }
                                }
                            }
                        }
                        simplesect
                        {
                            kind=return
                            para
                            {
                                chars="Returns the address of the allocated space."
                            }
                        }
                    }
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=240
                    column=1
                    bodyfile=/root/openenclave/include/openenclave/enclave.h
                    bodystart=240
                    bodyend=250
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1aba7207f5f5dd14d9e740548dd8b6b3fd
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void *"
                }
                definition
                {
                    chars="void* OE_HostMalloc"
                }
                argsstring
                {
                    chars="(size_t size)"
                }
                name
                {
                    chars="OE_HostMalloc"
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=260
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1a135af92bdf694591e1de1f8a61054511
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void *"
                }
                definition
                {
                    chars="void* OE_HostCalloc"
                }
                argsstring
                {
                    chars="(size_t nmemb, size_t size)"
                }
                name
                {
                    chars="OE_HostCalloc"
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="nmemb"
                    }
                }
                param
                {
                    type
                    {
                        chars="size_t"
                    }
                    declname
                    {
                        chars="size"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=262
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1af7ed072613e44809e1991f4f64c63b23
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void"
                }
                definition
                {
                    chars="void OE_HostFree"
                }
                argsstring
                {
                    chars="(void *ptr)"
                }
                name
                {
                    chars="OE_HostFree"
                }
                param
                {
                    type
                    {
                        chars="void *"
                    }
                    declname
                    {
                        chars="ptr"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=264
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1ad209d33cb2de70ea70aee5a167a02d03
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="char *"
                }
                definition
                {
                    chars="char* OE_HostStrdup"
                }
                argsstring
                {
                    chars="(const char *str)"
                }
                name
                {
                    chars="OE_HostStrdup"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="str"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=266
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1ae655f9a81dc40863b43a681793b277f9
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void *"
                }
                definition
                {
                    chars="void* OE_Sbrk"
                }
                argsstring
                {
                    chars="(ptrdiff_t increment)"
                }
                name
                {
                    chars="OE_Sbrk"
                }
                param
                {
                    type
                    {
                        chars="ptrdiff_t"
                    }
                    declname
                    {
                        chars="increment"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=276
                    column=1
                }
            }
            memberdef
            {
                kind=function
                id=enclave_8h_1afb7d4049a4bc01b8e5ba49741e447a16
                prot=public
                static=no
                const=no
                explicit=no
                inline=no
                virt=non-virtual
                type
                {
                    chars="void"
                }
                definition
                {
                    chars="void __OE_AssertFail"
                }
                argsstring
                {
                    chars="(const char *expr, const char *file, int line, const char *func)"
                }
                name
                {
                    chars="__OE_AssertFail"
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="expr"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="file"
                    }
                }
                param
                {
                    type
                    {
                        chars="int"
                    }
                    declname
                    {
                        chars="line"
                    }
                }
                param
                {
                    type
                    {
                        chars="const char *"
                    }
                    declname
                    {
                        chars="func"
                    }
                }
                briefdescription
                {
                }
                detaileddescription
                {
                }
                inbodydescription
                {
                }
                location
                {
                    file=/root/openenclave/include/openenclave/enclave.h
                    line=286
                    column=1
                }
            }
        }
        briefdescription
        {
        }
        detaileddescription
        {
        }
        programlisting
        {
            codeline
            {
                lineno=1
            }
            codeline
            {
                lineno=2
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#ifndef_OE_ENCLAVE_H"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=3
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#define_OE_ENCLAVE_H"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=4
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=5
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"defs.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=6
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"types.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=7
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"result.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=8
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"thread.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=9
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"typeinfo.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=10
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"atomic.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=11
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#include"sha.h""
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=12
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=13
                highlight
                {
                    class=normal
                    chars="OE_EXTERNC_BEGIN"
                }
            }
            codeline
            {
                lineno=14
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=15
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#ifndefOE_BUILD_ENCLAVE"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=16
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_BUILD_ENCLAVE"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=17
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    chars="#endif"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=18
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=19
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_ECALL_SECTION__attribute__((section(".ecall")))"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=20
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=21
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#ifdef__cplusplus"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=22
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_ECALLOE_EXTERNCOE_EXPORTOE_ECALL_SECTION"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=23
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    chars="#else"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=24
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_ECALLOE_EXPORTOE_ECALL_SECTION"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=25
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    chars="#endif"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=26
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=57
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a3f4d990cf1e916d65a82481a55aafbf4_1a3f4d990cf1e916d65a82481a55aafbf4
                        kindref=member
                        chars="OE_CallHost"
                    }
                    chars="OE_Result("
                }
            }
            codeline
            {
                lineno=58
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*func,"
                }
            }
            codeline
            {
                lineno=59
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*args);"
                }
            }
            codeline
            {
                lineno=60
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=61
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Result__OE_OCall("
                }
            }
            codeline
            {
                lineno=62
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="func,"
                }
            }
            codeline
            {
                lineno=63
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="uint64_targIn,"
                }
            }
            codeline
            {
                lineno=64
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="uint64_t*argOut);"
                }
            }
            codeline
            {
                lineno=65
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=80
                highlight
                {
                    class=keywordtype
                    chars="bool"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a02ef8b20b64a998bb97dfbdddb0c6ba5_1a02ef8b20b64a998bb97dfbdddb0c6ba5
                        kindref=member
                        chars="OE_IsWithinEnclave"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=81
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*ptr,"
                }
            }
            codeline
            {
                lineno=82
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="size);"
                }
            }
            codeline
            {
                lineno=83
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=98
                highlight
                {
                    class=keywordtype
                    chars="bool"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a33b395779e9fe73102bfe728261917a6_1a33b395779e9fe73102bfe728261917a6
                        kindref=member
                        chars="OE_IsOutsideEnclave"
                    }
                    chars="("
                }
            }
            codeline
            {
                lineno=99
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*ptr,"
                }
            }
            codeline
            {
                lineno=100
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="size);"
                }
            }
            codeline
            {
                lineno=101
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=102
                refid=struct__OE__EnclaveReportData
                refkind=compound
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keyword
                    chars="typedef"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    sp
                    {
                    }
                    chars="struct"
                }
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__EnclaveReportData
                        kindref=compound
                        chars="_OE_EnclaveReportData"
                    }
                }
            }
            codeline
            {
                lineno=103
                highlight
                {
                    class=normal
                    chars="{"
                }
            }
            codeline
            {
                lineno=104
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="unsigned"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="field[64];"
                }
            }
            codeline
            {
                lineno=105
                highlight
                {
                    class=normal
                    chars="}"
                }
            }
            codeline
            {
                lineno=106
                highlight
                {
                    class=normal
                    ref
                    {
                        refid=struct__OE__EnclaveReportData
                        kindref=compound
                        chars="OE_EnclaveReportData"
                    }
                    chars=";"
                }
            }
            codeline
            {
                lineno=107
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=108
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_ResultOE_GetReportForRemoteAttestation("
                }
            }
            codeline
            {
                lineno=109
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=struct__OE__EnclaveReportData
                        kindref=compound
                        chars="OE_EnclaveReportData"
                    }
                    sp
                    {
                    }
                    chars="*reportData,"
                }
            }
            codeline
            {
                lineno=110
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*report,"
                }
            }
            codeline
            {
                lineno=111
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*reportSize);"
                }
            }
            codeline
            {
                lineno=112
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=113
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="__OE_HandleMain("
                }
            }
            codeline
            {
                lineno=114
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="uint64_targ1,"
                }
            }
            codeline
            {
                lineno=115
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="uint64_targ2,"
                }
            }
            codeline
            {
                lineno=116
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="uint64_tcssa,"
                }
            }
            codeline
            {
                lineno=117
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*tcs);"
                }
            }
            codeline
            {
                lineno=118
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=119
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    chars="/*"
                }
            }
            codeline
            {
                lineno=120
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=121
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=122
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="**Stringfunctions:"
                }
            }
            codeline
            {
                lineno=123
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=124
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=125
                highlight
                {
                    class=comment
                    chars="*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=126
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=127
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Strlen("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*s);"
                }
            }
            codeline
            {
                lineno=128
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=129
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Strcmp("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*s1,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*s2);"
                }
            }
            codeline
            {
                lineno=130
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=131
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Strlcpy("
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*dest,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*src,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="size);"
                }
            }
            codeline
            {
                lineno=132
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=133
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Strlcat("
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*dest,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*src,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="size);"
                }
            }
            codeline
            {
                lineno=134
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=135
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*OE_Memcpy("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*dest,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*src,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="n);"
                }
            }
            codeline
            {
                lineno=136
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=137
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*OE_Memset("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*s,"
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="c,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="n);"
                }
            }
            codeline
            {
                lineno=138
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=139
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Memcmp("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*s1,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*s2,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="n);"
                }
            }
            codeline
            {
                lineno=140
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=141
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    chars="/*"
                }
            }
            codeline
            {
                lineno=142
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=143
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=144
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    chars="**Abort"
                }
            }
            codeline
            {
                lineno=145
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=146
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=147
                highlight
                {
                    class=comment
                    chars="*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=148
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=149
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_Abort("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    chars=");"
                }
            }
            codeline
            {
                lineno=150
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=176
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a6b091c1631b6fcd1826c4e7eaac12f0a_1a6b091c1631b6fcd1826c4e7eaac12f0a
                        kindref=member
                        chars="OE_Vsnprintf"
                    }
                    chars="("
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*str,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="size,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*fmt,OE_va_listap);"
                }
            }
            codeline
            {
                lineno=177
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=193
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_PRINTF_FORMAT(3,4)"
                }
            }
            codeline
            {
                lineno=194
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a278cf78b75ffd7901c00248ae2a655c7_1a278cf78b75ffd7901c00248ae2a655c7
                        kindref=member
                        chars="OE_Snprintf"
                    }
                    chars="("
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*str,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="size,"
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*fmt,...);"
                }
            }
            codeline
            {
                lineno=195
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=196
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    chars="/*"
                }
            }
            codeline
            {
                lineno=197
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=198
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=199
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="**Functionsforwritingtothehost'sconsole."
                }
            }
            codeline
            {
                lineno=200
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=201
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=202
                highlight
                {
                    class=comment
                    chars="*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=203
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=204
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_HostPuts("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*str);"
                }
            }
            codeline
            {
                lineno=205
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=206
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_HostPrint("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*str);"
                }
            }
            codeline
            {
                lineno=207
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=208
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_HostVprintf("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*fmt,OE_va_listap_);"
                }
            }
            codeline
            {
                lineno=209
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=221
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_PRINTF_FORMAT(1,2)"
                }
            }
            codeline
            {
                lineno=222
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a3593f7245e4dfc759435d3815eeccf51_1a3593f7245e4dfc759435d3815eeccf51
                        kindref=member
                        chars="OE_HostPrintf"
                    }
                    chars="("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*fmt,...);"
                }
            }
            codeline
            {
                lineno=223
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=224
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_HostPutchar("
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="c);"
                }
            }
            codeline
            {
                lineno=225
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=240
                refid=enclave_8h_a1c0f1e4f4f25df87c37777a5ef9fa8c7_1a1c0f1e4f4f25df87c37777a5ef9fa8c7
                refkind=member
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="OE_ALWAYS_INLINEOE_INLINE"
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    ref
                    {
                        refid=enclave_8h_a1c0f1e4f4f25df87c37777a5ef9fa8c7_1a1c0f1e4f4f25df87c37777a5ef9fa8c7
                        kindref=member
                        chars="OE_StackAlloc"
                    }
                    chars="*("
                }
            }
            codeline
            {
                lineno=241
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="size,"
                }
            }
            codeline
            {
                lineno=242
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="alignment)"
                }
            }
            codeline
            {
                lineno=243
                highlight
                {
                    class=normal
                    chars="{"
                }
            }
            codeline
            {
                lineno=244
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*ptr=__builtin_alloca(size+alignment);"
                }
            }
            codeline
            {
                lineno=245
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=246
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordflow
                    chars="if"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="(alignment)"
                }
            }
            codeline
            {
                lineno=247
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="ptr=("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*)(((uint64_t)ptr+alignment-1)/alignment*alignment);"
                }
            }
            codeline
            {
                lineno=248
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=249
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordflow
                    chars="return"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="ptr;"
                }
            }
            codeline
            {
                lineno=250
                highlight
                {
                    class=normal
                    chars="}"
                }
            }
            codeline
            {
                lineno=251
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=252
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    chars="/*"
                }
            }
            codeline
            {
                lineno=253
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=254
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=255
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="**Hostheapmemoryallocation:"
                }
            }
            codeline
            {
                lineno=256
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=257
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=258
                highlight
                {
                    class=comment
                    chars="*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=259
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=260
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*OE_HostMalloc("
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="size);"
                }
            }
            codeline
            {
                lineno=261
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=262
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*OE_HostCalloc("
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="nmemb,"
                }
                highlight
                {
                    class=keywordtype
                    chars="size_t"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="size);"
                }
            }
            codeline
            {
                lineno=263
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=264
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="OE_HostFree("
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*ptr);"
                }
            }
            codeline
            {
                lineno=265
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=266
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*OE_HostStrdup("
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*str);"
                }
            }
            codeline
            {
                lineno=267
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=268
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    chars="/*"
                }
            }
            codeline
            {
                lineno=269
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=270
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=271
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    chars="**OE_Sbrk()"
                }
            }
            codeline
            {
                lineno=272
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=273
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=274
                highlight
                {
                    class=comment
                    chars="*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=275
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=276
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="*OE_Sbrk(ptrdiff_tincrement);"
                }
            }
            codeline
            {
                lineno=277
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=278
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=comment
                    chars="/*"
                }
            }
            codeline
            {
                lineno=279
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=280
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=281
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    chars="**Assertion:"
                }
            }
            codeline
            {
                lineno=282
                highlight
                {
                    class=comment
                    chars="**"
                }
            }
            codeline
            {
                lineno=283
                highlight
                {
                    class=comment
                    chars="**=============================================================================="
                }
            }
            codeline
            {
                lineno=284
                highlight
                {
                    class=comment
                    chars="*/"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=285
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=286
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=keywordtype
                    chars="void"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="__OE_AssertFail("
                }
            }
            codeline
            {
                lineno=287
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*expr,"
                }
            }
            codeline
            {
                lineno=288
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*file,"
                }
            }
            codeline
            {
                lineno=289
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="int"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="line,"
                }
            }
            codeline
            {
                lineno=290
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keyword
                    chars="const"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                }
                highlight
                {
                    class=keywordtype
                    chars="char"
                }
                highlight
                {
                    class=normal
                    sp
                    {
                    }
                    chars="*func);"
                }
            }
            codeline
            {
                lineno=291
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=292
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="#defineOE_Assert(EXPR)\"
                }
            }
            codeline
            {
                lineno=293
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="do\"
                }
            }
            codeline
            {
                lineno=294
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="{\"
                }
            }
            codeline
            {
                lineno=295
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="if(!(EXPR))\"
                }
            }
            codeline
            {
                lineno=296
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="__OE_AssertFail(#EXPR,__FILE__,__LINE__,__FUNCTION__);\"
                }
            }
            codeline
            {
                lineno=297
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="}\"
                }
            }
            codeline
            {
                lineno=298
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="while(0)"
                }
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=299
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=300
                highlight
                {
                    class=normal
                    chars="OE_EXTERNC_END"
                }
            }
            codeline
            {
                lineno=301
                highlight
                {
                    class=normal
                }
            }
            codeline
            {
                lineno=302
                highlight
                {
                    class=normal
                }
                highlight
                {
                    class=preprocessor
                    sp
                    {
                    }
                    chars="#endif"
                }
                highlight
                {
                    class=comment
                    sp
                    {
                    }
                    sp
                    {
                    }
                    chars="/*_OE_ENCLAVE_H*/"
                }
                highlight
                {
                    class=preprocessor
                }
            }
        }
        location
        {
            file=/root/openenclave/include/openenclave/enclave.h
        }
    }
}
